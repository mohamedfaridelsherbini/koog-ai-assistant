/*
 * This source file was generated by the Gradle 'init' task
 */
package dev.craftmind.agent

import kotlinx.coroutines.runBlocking
import kotlin.test.Test
import kotlin.test.assertEquals
import kotlin.test.assertTrue

class AppTest {
    @Test fun testDockerOllamaExecutor() = runBlocking {
        val executor = DockerOllamaExecutor(
            baseUrl = "http://[::1]:11434",
            model = "test-model"
        )
        
        val result = executor.execute("Hello!", "You are a helpful assistant.")
        // Should get an error since the model doesn't exist, but the executor should handle it gracefully
        assertTrue(result.contains("Error") || result.contains("model") || result.contains("not found"))
    }
    
    @Test fun testDockerAIAgent() = runBlocking {
        val executor = DockerOllamaExecutor(
            baseUrl = "http://[::1]:11434",
            model = "test-model"
        )
        
        val agent = DockerAIAgent(
            systemPrompt = "You are a helpful assistant.",
            modelName = "TestModel",
            executor = executor
        )
        
        val result = agent.run("Hello!")
        assertTrue(result.contains("Error") || result.contains("model") || result.contains("not found"))
    }
    
    @Test fun testLLModel() {
        val model = LLModel(
            provider = LLMProvider.OLLAMA_DOCKER,
            id = "llama3.2:3b",
            capabilities = listOf(LLMCapability.CHAT_COMPLETION, LLMCapability.TOOLS_USAGE)
        )
        
        assertEquals(LLMProvider.OLLAMA_DOCKER, model.provider)
        assertEquals("llama3.2:3b", model.id)
        assertEquals(2, model.capabilities.size)
    }
}
